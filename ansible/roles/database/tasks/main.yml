---
-   name: pip install
    pip:
        name: "{{ packages }}"

-   name: Start MySQL docker container
    docker_container:
        name: "{{ database_name }}"
        image: mysql:5.7
        state: started
        volumes:
            - ./mysql:/var/lib/mysql
        env:
            MYSQL_DATABASE: microblog
            # MYSQL_RANDOM_ROOT_PASSWORD: "yes"
            MYSQL_USER: microblog
            MYSQL_PASSWORD: "{{ database_password }}"
            MYSQL_ROOT_PASSWORD: "{{ database_password }}"
        ports:
            - "3306:3306"
        container_default_behavior: "compatibility"

#if down do this
# ALTER USER 'root'@'localhost' IDENTIFIED BY '<password>'; # skippa detta steget om du sätter root lösenord när du skapar containern.

# CREATE USER 'exporter'@'%' IDENTIFIED BY '<password>' WITH MAX_USER_CONNECTIONS 3;
# GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO 'exporter'@'%';
# GRANT SELECT ON performance_schema.* TO 'exporter'@'%';

-   name: Start mysql-exporter
    docker_container:
        name: mysqld-exporter
        image: "prom/mysqld-exporter:latest"
        state: started
        restart_policy: always
        network_mode: host
        env:
            DATA_SOURCE_NAME: "exporter:exporter@(localhost:3306)/"
        command: |
            --collect.auto_increment.columns
            --collect.binlog_size
            --collect.engine_innodb_status
            --collect.engine_tokudb_status
            --collect.global_status

-   name: Check if mysql-exporter is accessible
    uri:
        url: http://localhost:9104/metrics
        method: GET
        status_code: 200